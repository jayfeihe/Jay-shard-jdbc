1.说明：
使用当当开源的sharding-jdbc做分库分表。 resources/sql下的sql语句在两个不同的数据库下执行。(在两个主库下执行)

city不分库不分表
product分表不分库，分表键为：product_id
user分库不分表。分库键键为：user_id
order分库分表。分库键为：user_id，分表键为：order_id
order_item分库分表。分库键为：order_id，分表键为：item_id

读写分离
主库：localhost shard_1、localhost shard_2
从库：localhost shard_3、localhost shard_4

#读写分离 主库：192.168.56.75、192.168.56.76 从库：192.168.56.73、192.168.56.74

2.Swagger2参考文档：
http://springfox.github.io/springfox/docs/current/

3.关于数据的说明：
  1.两个主库 shard_1、shard_2是分库的结果，
    主库只负责写入数据
  2.每个分库对应一个从库，
    从库只负责读取数据
          shard_3  是 shard_1 的从库
          shard_2  是 shard_4 的从库
  3.从库数据，自动与主库数据同步  (主从复制)
    Mysql主从配置，实现读写分离
    参考：
        http://www.cnblogs.com/alvin_xp/p/4162249.html
        http://blog.csdn.net/ohmygirl/article/details/40200061

4.批量insert操作，一次最多允许插入1000条，如果数据量大，分多次批量插入即可
  说明：
      原生的Sharding-JDBC不支持批量插入，这里通过对List集合进行分库分表处理后再进行批量操作


5.docker搭建2个主从复制(主3001-从3002,主4001-从4002)
  1.将4个docker实例下的mysql配置文件，拷贝到指定目录
    eg:
       /jay/jay_project/jay-shard-jdbc/mysql_config/config1
       /jay/jay_project/jay-shard-jdbc/mysql_config/config2

  2.启动4个mysql的docker容器
    主从1：
         docker run --name mysql_3001 -p 3001:3306 -d -v /home/jayhe/jay/jay_project/jay-shard-jdbc/mysql_config/config1/my-m.cnf:/etc/mysql/my.cnf -e MYSQL_ROOT_PASSWORD='root' mysql:5.6
         docker run --name mysql_3002 -p 3002:3306 -d -v /home/jayhe/jay/jay_project/jay-shard-jdbc/mysql_config/config1/my-s1.cnf:/etc/mysql/my.cnf -e MYSQL_ROOT_PASSWORD='root' mysql:5.6

    主从2：
         docker run --name mysql_4001 -p 4001:3306 -d -v /home/jayhe/jay/jay_project/jay-shard-jdbc/mysql_config/config2/my-m.cnf:/etc/mysql/my.cnf -e MYSQL_ROOT_PASSWORD='root' mysql:5.6
         docker run --name mysql_4002 -p 4002:3306 -d -v /home/jayhe/jay/jay_project/jay-shard-jdbc/mysql_config/config2/my-s1.cnf:/etc/mysql/my.cnf -e MYSQL_ROOT_PASSWORD='root' mysql:5.6

  3.连接容器中的mysql   ---  即使本地mysql每启动，仍然可以连接容器的mysql服务
             语法:
                 mysql -h IP -P port -uroot -proot

             1.配置主3001-从3002的mysql主从复制

                 连接主服务器
                 mysql -h 127.0.0.1 -P 3001 -uroot -proot
                 登录主服务器，创建账户并授权
                 grant replication slave on *.* to 'mysync'@'%' identified by 'root';
                 查看主服务器状态
                 show master status;
                 +------------------+----------+--------------+------------------+-------------------+
                 | File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
                 +------------------+----------+--------------+------------------+-------------------+
                 | mysql-bin.000004 |      312 |              |                  |                   |
                 +------------------+----------+--------------+------------------+-------------------+


                 登录从服务器:
                          mysql -h 127.0.0.1 -P 3002 -uroot -proot

                          配置从服务器：
                                     ---  这里的 master_log_file='mysql-bin.000004', master_log_pos与主服务器中的master status一致
                          change master to master_host='172.17.64.182',master_port=3001,master_user='mysync',master_password='root',master_log_file='mysql-bin.000004', master_log_pos=312;

                         启动从服务器复制功能
                          start slave;

                         查看从服务器复制功能状态：
                          show slave status;

                          +----------------------------------+---------------+-------------+-------------+---------------+------------------+---------------------+-------------------------+---------------+-----------------------+------------------+-------------------+-----------------+---------------------+--------------------+------------------------+-------------------------+-----------------------------+------------+------------+--------------+---------------------+-----------------+-----------------+----------------+---------------+--------------------+--------------------+--------------------+-----------------+-------------------+----------------+-----------------------+-------------------------------+---------------+---------------+----------------+----------------+-----------------------------+------------------+--------------------------------------+----------------------------+-----------+---------------------+-----------------------------------------------------------------------------+--------------------+-------------+-------------------------+--------------------------+----------------+--------------------+--------------------+-------------------+---------------+
                          | Slave_IO_State                   | Master_Host   | Master_User | Master_Port | Connect_Retry | Master_Log_File  | Read_Master_Log_Pos | Relay_Log_File          | Relay_Log_Pos | Relay_Master_Log_File | Slave_IO_Running | Slave_SQL_Running | Replicate_Do_DB | Replicate_Ignore_DB | Replicate_Do_Table | Replicate_Ignore_Table | Replicate_Wild_Do_Table | Replicate_Wild_Ignore_Table | Last_Errno | Last_Error | Skip_Counter | Exec_Master_Log_Pos | Relay_Log_Space | Until_Condition | Until_Log_File | Until_Log_Pos | Master_SSL_Allowed | Master_SSL_CA_File | Master_SSL_CA_Path | Master_SSL_Cert | Master_SSL_Cipher | Master_SSL_Key | Seconds_Behind_Master | Master_SSL_Verify_Server_Cert | Last_IO_Errno | Last_IO_Error | Last_SQL_Errno | Last_SQL_Error | Replicate_Ignore_Server_Ids | Master_Server_Id | Master_UUID                          | Master_Info_File           | SQL_Delay | SQL_Remaining_Delay | Slave_SQL_Running_State                                                     | Master_Retry_Count | Master_Bind | Last_IO_Error_Timestamp | Last_SQL_Error_Timestamp | Master_SSL_Crl | Master_SSL_Crlpath | Retrieved_Gtid_Set | Executed_Gtid_Set | Auto_Position |

                          | Waiting for master to send event | 172.17.64.182 | mysync      |        3001 |            60 | mysql-bin.000004 |                 312 | mysqld-relay-bin.000002 |           283 | mysql-bin.000004      | Yes              | Yes               |                 |                     |                    |                        |                         |                             |          0 |            |            0 |                 312 |             457 | None            |                |             0 | No                 |                    |                    |                 |                   |                |                     0 | No                            |             0 |               |              0 |                |                             |             3001 | 378bd08b-02e2-11e7-aafe-0242ac120002 | /var/lib/mysql/master.info |         0 |                NULL | Slave has read all relay log; waiting for the slave I/O thread to update it |              86400 |             |                         |                          |                |                    |                    |                   |             0 |


                          说明：
                                Slave_IO_State  =  Waiting for master to send event
                                Slave_IO和Slave_SQL 都是 YES
                                则表示主从复制配置成功

                 特别注意：
                         这里的master_host必须时IP ，不能时127.0.0.1或localhost

             2.同样的方式，配置 主4001-从4002的mysql主从复制

             3.执行resources/sql下的mysql.sql   ---  在主库mysql_3001和mysql_4001中执行，对于的从库会自动同步



